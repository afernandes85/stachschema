// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fds/protobuf/stach/table/SeriesData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FactSet.Protobuf.Stach.Table {

  /// <summary>Holder for reflection information generated from fds/protobuf/stach/table/SeriesData.proto</summary>
  public static partial class SeriesDataReflection {

    #region Descriptor
    /// <summary>File descriptor for fds/protobuf/stach/table/SeriesData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SeriesDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilmZHMvcHJvdG9idWYvc3RhY2gvdGFibGUvU2VyaWVzRGF0YS5wcm90bxIc",
            "ZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZRonZmRzL3Byb3RvYnVmL3N0",
            "YWNoL3RhYmxlL1dyYXBwZXJzLnByb3RvIskFCgpTZXJpZXNEYXRhEkQKBnJh",
            "bmdlcxgBIAMoCzI0LmZhY3RzZXQucHJvdG9idWYuc3RhY2gudGFibGUuU2Vy",
            "aWVzRGF0YS5SYW5nZXNFbnRyeRJBCgxkb3VibGVfYXJyYXkYZCABKAsyKS5m",
            "YWN0c2V0LnByb3RvYnVmLnN0YWNoLnRhYmxlLkRvdWJsZUFycmF5SAASPwoL",
            "ZmxvYXRfYXJyYXkYZSABKAsyKC5mYWN0c2V0LnByb3RvYnVmLnN0YWNoLnRh",
            "YmxlLkZsb2F0QXJyYXlIABI/CgtpbnQzMl9hcnJheRhmIAEoCzIoLmZhY3Rz",
            "ZXQucHJvdG9idWYuc3RhY2gudGFibGUuSW50MzJBcnJheUgAEj8KC2ludDY0",
            "X2FycmF5GGcgASgLMiguZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZS5J",
            "bnQ2NEFycmF5SAASPQoKYm9vbF9hcnJheRhqIAEoCzInLmZhY3RzZXQucHJv",
            "dG9idWYuc3RhY2gudGFibGUuQm9vbEFycmF5SAASQQoMc3RyaW5nX2FycmF5",
            "GGsgASgLMikuZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZS5TdHJpbmdB",
            "cnJheUgAEkUKDmR1cmF0aW9uX2FycmF5GGwgASgLMisuZmFjdHNldC5wcm90",
            "b2J1Zi5zdGFjaC50YWJsZS5EdXJhdGlvbkFycmF5SAASRwoPdGltZXN0YW1w",
            "X2FycmF5GG0gASgLMiwuZmFjdHNldC5wcm90b2J1Zi5zdGFjaC50YWJsZS5U",
            "aW1lc3RhbXBBcnJheUgAGi0KC1Jhbmdlc0VudHJ5EgsKA2tleRgBIAEoBRIN",
            "CgV2YWx1ZRgCIAEoBToCOAFCBgoEZGF0YUoECGgQaUoECGkQalIMdWludDMy",
            "X2FycmF5Ugx1aW50NjRfYXJyYXlCUgogY29tLmZhY3RzZXQucHJvdG9idWYu",
            "c3RhY2gudGFibGVCD1Nlcmllc0RhdGFQcm90b6oCHEZhY3RTZXQuUHJvdG9i",
            "dWYuU3RhY2guVGFibGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::FactSet.Protobuf.Stach.Table.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FactSet.Protobuf.Stach.Table.SeriesData), global::FactSet.Protobuf.Stach.Table.SeriesData.Parser, new[]{ "Ranges", "DoubleArray", "FloatArray", "Int32Array", "Int64Array", "BoolArray", "StringArray", "DurationArray", "TimestampArray" }, new[]{ "Data" }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SeriesData : pb::IMessage<SeriesData> {
    private static readonly pb::MessageParser<SeriesData> _parser = new pb::MessageParser<SeriesData>(() => new SeriesData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeriesData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FactSet.Protobuf.Stach.Table.SeriesDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeriesData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeriesData(SeriesData other) : this() {
      ranges_ = other.ranges_.Clone();
      switch (other.DataCase) {
        case DataOneofCase.DoubleArray:
          DoubleArray = other.DoubleArray.Clone();
          break;
        case DataOneofCase.FloatArray:
          FloatArray = other.FloatArray.Clone();
          break;
        case DataOneofCase.Int32Array:
          Int32Array = other.Int32Array.Clone();
          break;
        case DataOneofCase.Int64Array:
          Int64Array = other.Int64Array.Clone();
          break;
        case DataOneofCase.BoolArray:
          BoolArray = other.BoolArray.Clone();
          break;
        case DataOneofCase.StringArray:
          StringArray = other.StringArray.Clone();
          break;
        case DataOneofCase.DurationArray:
          DurationArray = other.DurationArray.Clone();
          break;
        case DataOneofCase.TimestampArray:
          TimestampArray = other.TimestampArray.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeriesData Clone() {
      return new SeriesData(this);
    }

    /// <summary>Field number for the "ranges" field.</summary>
    public const int RangesFieldNumber = 1;
    private static readonly pbc::MapField<int, int>.Codec _map_ranges_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<int, int> ranges_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Ranges {
      get { return ranges_; }
    }

    /// <summary>Field number for the "double_array" field.</summary>
    public const int DoubleArrayFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.DoubleArray DoubleArray {
      get { return dataCase_ == DataOneofCase.DoubleArray ? (global::FactSet.Protobuf.Stach.Table.DoubleArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DoubleArray;
      }
    }

    /// <summary>Field number for the "float_array" field.</summary>
    public const int FloatArrayFieldNumber = 101;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.FloatArray FloatArray {
      get { return dataCase_ == DataOneofCase.FloatArray ? (global::FactSet.Protobuf.Stach.Table.FloatArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.FloatArray;
      }
    }

    /// <summary>Field number for the "int32_array" field.</summary>
    public const int Int32ArrayFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.Int32Array Int32Array {
      get { return dataCase_ == DataOneofCase.Int32Array ? (global::FactSet.Protobuf.Stach.Table.Int32Array) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Int32Array;
      }
    }

    /// <summary>Field number for the "int64_array" field.</summary>
    public const int Int64ArrayFieldNumber = 103;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.Int64Array Int64Array {
      get { return dataCase_ == DataOneofCase.Int64Array ? (global::FactSet.Protobuf.Stach.Table.Int64Array) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Int64Array;
      }
    }

    /// <summary>Field number for the "bool_array" field.</summary>
    public const int BoolArrayFieldNumber = 106;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.BoolArray BoolArray {
      get { return dataCase_ == DataOneofCase.BoolArray ? (global::FactSet.Protobuf.Stach.Table.BoolArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.BoolArray;
      }
    }

    /// <summary>Field number for the "string_array" field.</summary>
    public const int StringArrayFieldNumber = 107;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.StringArray StringArray {
      get { return dataCase_ == DataOneofCase.StringArray ? (global::FactSet.Protobuf.Stach.Table.StringArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.StringArray;
      }
    }

    /// <summary>Field number for the "duration_array" field.</summary>
    public const int DurationArrayFieldNumber = 108;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.DurationArray DurationArray {
      get { return dataCase_ == DataOneofCase.DurationArray ? (global::FactSet.Protobuf.Stach.Table.DurationArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DurationArray;
      }
    }

    /// <summary>Field number for the "timestamp_array" field.</summary>
    public const int TimestampArrayFieldNumber = 109;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FactSet.Protobuf.Stach.Table.TimestampArray TimestampArray {
      get { return dataCase_ == DataOneofCase.TimestampArray ? (global::FactSet.Protobuf.Stach.Table.TimestampArray) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.TimestampArray;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      DoubleArray = 100,
      FloatArray = 101,
      Int32Array = 102,
      Int64Array = 103,
      BoolArray = 106,
      StringArray = 107,
      DurationArray = 108,
      TimestampArray = 109,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeriesData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeriesData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Ranges.Equals(other.Ranges)) return false;
      if (!object.Equals(DoubleArray, other.DoubleArray)) return false;
      if (!object.Equals(FloatArray, other.FloatArray)) return false;
      if (!object.Equals(Int32Array, other.Int32Array)) return false;
      if (!object.Equals(Int64Array, other.Int64Array)) return false;
      if (!object.Equals(BoolArray, other.BoolArray)) return false;
      if (!object.Equals(StringArray, other.StringArray)) return false;
      if (!object.Equals(DurationArray, other.DurationArray)) return false;
      if (!object.Equals(TimestampArray, other.TimestampArray)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Ranges.GetHashCode();
      if (dataCase_ == DataOneofCase.DoubleArray) hash ^= DoubleArray.GetHashCode();
      if (dataCase_ == DataOneofCase.FloatArray) hash ^= FloatArray.GetHashCode();
      if (dataCase_ == DataOneofCase.Int32Array) hash ^= Int32Array.GetHashCode();
      if (dataCase_ == DataOneofCase.Int64Array) hash ^= Int64Array.GetHashCode();
      if (dataCase_ == DataOneofCase.BoolArray) hash ^= BoolArray.GetHashCode();
      if (dataCase_ == DataOneofCase.StringArray) hash ^= StringArray.GetHashCode();
      if (dataCase_ == DataOneofCase.DurationArray) hash ^= DurationArray.GetHashCode();
      if (dataCase_ == DataOneofCase.TimestampArray) hash ^= TimestampArray.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ranges_.WriteTo(output, _map_ranges_codec);
      if (dataCase_ == DataOneofCase.DoubleArray) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(DoubleArray);
      }
      if (dataCase_ == DataOneofCase.FloatArray) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(FloatArray);
      }
      if (dataCase_ == DataOneofCase.Int32Array) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Int32Array);
      }
      if (dataCase_ == DataOneofCase.Int64Array) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Int64Array);
      }
      if (dataCase_ == DataOneofCase.BoolArray) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(BoolArray);
      }
      if (dataCase_ == DataOneofCase.StringArray) {
        output.WriteRawTag(218, 6);
        output.WriteMessage(StringArray);
      }
      if (dataCase_ == DataOneofCase.DurationArray) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(DurationArray);
      }
      if (dataCase_ == DataOneofCase.TimestampArray) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(TimestampArray);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ranges_.CalculateSize(_map_ranges_codec);
      if (dataCase_ == DataOneofCase.DoubleArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DoubleArray);
      }
      if (dataCase_ == DataOneofCase.FloatArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FloatArray);
      }
      if (dataCase_ == DataOneofCase.Int32Array) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Int32Array);
      }
      if (dataCase_ == DataOneofCase.Int64Array) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Int64Array);
      }
      if (dataCase_ == DataOneofCase.BoolArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BoolArray);
      }
      if (dataCase_ == DataOneofCase.StringArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StringArray);
      }
      if (dataCase_ == DataOneofCase.DurationArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DurationArray);
      }
      if (dataCase_ == DataOneofCase.TimestampArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimestampArray);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeriesData other) {
      if (other == null) {
        return;
      }
      ranges_.Add(other.ranges_);
      switch (other.DataCase) {
        case DataOneofCase.DoubleArray:
          if (DoubleArray == null) {
            DoubleArray = new global::FactSet.Protobuf.Stach.Table.DoubleArray();
          }
          DoubleArray.MergeFrom(other.DoubleArray);
          break;
        case DataOneofCase.FloatArray:
          if (FloatArray == null) {
            FloatArray = new global::FactSet.Protobuf.Stach.Table.FloatArray();
          }
          FloatArray.MergeFrom(other.FloatArray);
          break;
        case DataOneofCase.Int32Array:
          if (Int32Array == null) {
            Int32Array = new global::FactSet.Protobuf.Stach.Table.Int32Array();
          }
          Int32Array.MergeFrom(other.Int32Array);
          break;
        case DataOneofCase.Int64Array:
          if (Int64Array == null) {
            Int64Array = new global::FactSet.Protobuf.Stach.Table.Int64Array();
          }
          Int64Array.MergeFrom(other.Int64Array);
          break;
        case DataOneofCase.BoolArray:
          if (BoolArray == null) {
            BoolArray = new global::FactSet.Protobuf.Stach.Table.BoolArray();
          }
          BoolArray.MergeFrom(other.BoolArray);
          break;
        case DataOneofCase.StringArray:
          if (StringArray == null) {
            StringArray = new global::FactSet.Protobuf.Stach.Table.StringArray();
          }
          StringArray.MergeFrom(other.StringArray);
          break;
        case DataOneofCase.DurationArray:
          if (DurationArray == null) {
            DurationArray = new global::FactSet.Protobuf.Stach.Table.DurationArray();
          }
          DurationArray.MergeFrom(other.DurationArray);
          break;
        case DataOneofCase.TimestampArray:
          if (TimestampArray == null) {
            TimestampArray = new global::FactSet.Protobuf.Stach.Table.TimestampArray();
          }
          TimestampArray.MergeFrom(other.TimestampArray);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ranges_.AddEntriesFrom(input, _map_ranges_codec);
            break;
          }
          case 802: {
            global::FactSet.Protobuf.Stach.Table.DoubleArray subBuilder = new global::FactSet.Protobuf.Stach.Table.DoubleArray();
            if (dataCase_ == DataOneofCase.DoubleArray) {
              subBuilder.MergeFrom(DoubleArray);
            }
            input.ReadMessage(subBuilder);
            DoubleArray = subBuilder;
            break;
          }
          case 810: {
            global::FactSet.Protobuf.Stach.Table.FloatArray subBuilder = new global::FactSet.Protobuf.Stach.Table.FloatArray();
            if (dataCase_ == DataOneofCase.FloatArray) {
              subBuilder.MergeFrom(FloatArray);
            }
            input.ReadMessage(subBuilder);
            FloatArray = subBuilder;
            break;
          }
          case 818: {
            global::FactSet.Protobuf.Stach.Table.Int32Array subBuilder = new global::FactSet.Protobuf.Stach.Table.Int32Array();
            if (dataCase_ == DataOneofCase.Int32Array) {
              subBuilder.MergeFrom(Int32Array);
            }
            input.ReadMessage(subBuilder);
            Int32Array = subBuilder;
            break;
          }
          case 826: {
            global::FactSet.Protobuf.Stach.Table.Int64Array subBuilder = new global::FactSet.Protobuf.Stach.Table.Int64Array();
            if (dataCase_ == DataOneofCase.Int64Array) {
              subBuilder.MergeFrom(Int64Array);
            }
            input.ReadMessage(subBuilder);
            Int64Array = subBuilder;
            break;
          }
          case 850: {
            global::FactSet.Protobuf.Stach.Table.BoolArray subBuilder = new global::FactSet.Protobuf.Stach.Table.BoolArray();
            if (dataCase_ == DataOneofCase.BoolArray) {
              subBuilder.MergeFrom(BoolArray);
            }
            input.ReadMessage(subBuilder);
            BoolArray = subBuilder;
            break;
          }
          case 858: {
            global::FactSet.Protobuf.Stach.Table.StringArray subBuilder = new global::FactSet.Protobuf.Stach.Table.StringArray();
            if (dataCase_ == DataOneofCase.StringArray) {
              subBuilder.MergeFrom(StringArray);
            }
            input.ReadMessage(subBuilder);
            StringArray = subBuilder;
            break;
          }
          case 866: {
            global::FactSet.Protobuf.Stach.Table.DurationArray subBuilder = new global::FactSet.Protobuf.Stach.Table.DurationArray();
            if (dataCase_ == DataOneofCase.DurationArray) {
              subBuilder.MergeFrom(DurationArray);
            }
            input.ReadMessage(subBuilder);
            DurationArray = subBuilder;
            break;
          }
          case 874: {
            global::FactSet.Protobuf.Stach.Table.TimestampArray subBuilder = new global::FactSet.Protobuf.Stach.Table.TimestampArray();
            if (dataCase_ == DataOneofCase.TimestampArray) {
              subBuilder.MergeFrom(TimestampArray);
            }
            input.ReadMessage(subBuilder);
            TimestampArray = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
